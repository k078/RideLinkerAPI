// <auto-generated />
using System;
using Infrastructure.RL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.RL.Migrations
{
    [DbContext(typeof(RideLinkerDbContext))]
    partial class RideLinkerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Domain.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = true,
                            Brand = "Volkswagen",
                            Image = "https://dam.broekhuis.online/online/broekhuis/modelpaginas/volkswagen/image-thumb__29831__original/hero-vw-id3-mob.webp",
                            Model = "ID.3"
                        },
                        new
                        {
                            Id = 2,
                            Available = true,
                            Brand = "Volkswagen",
                            Image = "https://dam.broekhuis.online/online/broekhuis/modelpaginas/volkswagen/image-thumb__29831__original/hero-vw-id3-mob.webp",
                            Model = "ID.3"
                        },
                        new
                        {
                            Id = 3,
                            Available = true,
                            Brand = "Volkswagen",
                            Image = "https://dam.broekhuis.online/online/broekhuis/modelpaginas/volkswagen/image-thumb__29831__original/hero-vw-id3-mob.webp",
                            Model = "ID.3"
                        },
                        new
                        {
                            Id = 4,
                            Available = true,
                            Brand = "Volkswagen",
                            Image = "https://dam.broekhuis.online/online/broekhuis/modelpaginas/volkswagen/image-thumb__29831__original/hero-vw-id3-mob.webp",
                            Model = "ID.3"
                        },
                        new
                        {
                            Id = 5,
                            Available = true,
                            Brand = "Audi",
                            Image = "https://ev-database.org/img/auto/Audi_e-tron/Audi_e-tron-01@2x.jpg",
                            Model = "E-tron"
                        },
                        new
                        {
                            Id = 6,
                            Available = true,
                            Brand = "Audi",
                            Image = "https://ev-database.org/img/auto/Audi_e-tron/Audi_e-tron-01@2x.jpg",
                            Model = "E-tron"
                        },
                        new
                        {
                            Id = 7,
                            Available = true,
                            Brand = "Audi",
                            Image = "https://ev-database.org/img/auto/Audi_e-tron/Audi_e-tron-01@2x.jpg",
                            Model = "E-tron"
                        },
                        new
                        {
                            Id = 8,
                            Available = true,
                            Brand = "Audi",
                            Image = "https://ev-database.org/img/auto/Audi_e-tron/Audi_e-tron-01@2x.jpg",
                            Model = "E-tron"
                        });
                });

            modelBuilder.Entity("Core.Domain.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Konijnenberg 24",
                            Name = "Breda"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Nachtwachtlaan 20",
                            Name = "Amsterdam"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Vliegend Hertlaan 39",
                            Name = "Utrecht"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Velperweg 27",
                            Name = "Arnhem"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Brouwerijstraat 1",
                            Name = "Enschede"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Vrijthof 23",
                            Name = "Maastricht"
                        });
                });

            modelBuilder.Entity("Core.Domain.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Core.Domain.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartureId")
                        .HasColumnType("int");

                    b.Property<int?>("DestinationId")
                        .HasColumnType("int");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("DepartureId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("DriverId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndTime = new DateTime(2023, 12, 22, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2023, 12, 22, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EndTime = new DateTime(2023, 12, 23, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2023, 12, 23, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EndTime = new DateTime(2023, 12, 23, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2023, 12, 23, 15, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            EndTime = new DateTime(2023, 12, 27, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2023, 12, 27, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            EndTime = new DateTime(2023, 12, 27, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2023, 12, 27, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            EndTime = new DateTime(2023, 12, 27, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2023, 12, 27, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Core.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@mail.com",
                            Name = "Admin",
                            UserRole = 0
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hg@mail.com",
                            Name = "Hans Gerard",
                            UserRole = 1
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2000, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sten@mail.com",
                            Name = "Sten",
                            UserRole = 1
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2001, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "kalle@mail.com",
                            Name = "Kalle",
                            UserRole = 0
                        });
                });

            modelBuilder.Entity("Core.Domain.Car", b =>
                {
                    b.HasOne("Core.Domain.Location", "Location")
                        .WithMany("Cars")
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Core.Domain.Reservation", b =>
                {
                    b.HasOne("Core.Domain.Trip", null)
                        .WithMany("Reservations")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Domain.Trip", b =>
                {
                    b.HasOne("Core.Domain.Car", "Car")
                        .WithMany("Trips")
                        .HasForeignKey("CarId");

                    b.HasOne("Core.Domain.Location", "Departure")
                        .WithMany()
                        .HasForeignKey("DepartureId");

                    b.HasOne("Core.Domain.Location", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId");

                    b.HasOne("Core.Domain.User", "Driver")
                        .WithMany("TripsAsDriver")
                        .HasForeignKey("DriverId");

                    b.Navigation("Car");

                    b.Navigation("Departure");

                    b.Navigation("Destination");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("Core.Domain.Car", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("Core.Domain.Location", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("Core.Domain.Trip", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Core.Domain.User", b =>
                {
                    b.Navigation("TripsAsDriver");
                });
#pragma warning restore 612, 618
        }
    }
}
